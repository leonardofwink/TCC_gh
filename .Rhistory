big.mark = " "))+
scale_x_discrete(limits = c("87398500",
"87398980",
"87398900",
"87398950",
"87405500",
"87406900",
"87409900"),
labels = c("PM1", "PM2", "PM3", "PM4", "PM5", "PM6", "PM7")
)+
geom_smooth(
method = "lm",
se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
aes(group = 1),
alpha = .5,
na.rm = TRUE,
size = 1
)+
theme_grafs()
}
# Chunk 27: gerando function ts_pH
ts_pH <- function(dados = plan_wide_19902020, eixo_x = data_coleta, eixo_y = pH, titulo = "pH"){
dados %>%
dplyr::filter(
periodo == "1990-2000" |
periodo == "2000-2010" |
periodo == "2010-2020"
) %>%
dplyr::select(ponto_monitoramento, pH, data_coleta, periodo) %>%
ggplot2::ggplot(
data = .,
aes(
x = {{eixo_x}},
y = {{eixo_y}}
)
)+
annotate("rect",
xmin = periodo_inicial, xmax = periodo_final,
ymin = -Inf, ymax = 6,
alpha = 1,
fill="#eb5661")+ #classe 4
annotate("rect",
xmin = periodo_inicial, xmax = periodo_final,
ymin = 9, ymax = Inf,
alpha = 1,
fill="#eb5661")+ #classe 4
annotate("rect",
xmin = periodo_inicial, xmax = periodo_final,
ymin = 6, ymax = 9,
alpha = 1,
fill="#8dcdeb")+ #classe 1
labs(
title = titulo,
x = NULL,
y = NULL,
)+
geom_vline(
xintercept = as.Date(c("2010-01-01", "2000-01-01"), "%Y-%m-%d"),
color = "grey25",
linetype = "dashed",
)+
geom_line(
linewidth = 0.05,
linetype = 9,
# aes(color = codigo),
na.rm = TRUE
)+
geom_point(
size = 1,
# aes(color = codigo),
na.rm = TRUE
)+
scale_x_date(
limits = as.Date(c(
"1990-01-01",
"2021-01-01"
# NA #pode usar NA também
)),
expand = c(0.0, 0.0),
date_breaks = "5 years",
minor_breaks = "1 year",
date_labels = "%Y",
)+
facet_wrap(
~ponto_monitoramento,
nrow = 4,
)+
theme_bw()+
theme(
plot.title =
element_text(
hjust = 0.5,
color = "black",
size = 17),
axis.title.x =
element_text(
color = "black",
size = 15,
angle = 0,),
# element_blank(),
axis.title.y = element_text(
color = "black",
size = 15,
angle = 90),
axis.text.x = element_text(
color = "black",
size = 13,
angle = 0),
axis.text.y = element_text(
color = "black",
size = 15,
angle = 0),
strip.background = element_rect(fill = "white",
linetype = 1,
size = 0.5,
color = "black"),
strip.text = element_text(size = 14),
# panel.background = element_rect(fill = "white"),
panel.spacing.x = unit(1, "lines"),
plot.margin = margin(l = 5, r = 10,
b = 5, t = 5)
)
}
# Chunk 28: gerando function graf SolTot
boxplot_solidos_totais <- function(dados = plan_wide_19902020, eixo_x = codigo, eixo_y = solidos_totais, titulo = "Sólidos totais"){
ggplot2::ggplot(
data = dados,
aes(
x = {{eixo_x}},
y = {{eixo_y}}
)
)+
annotate("rect",
xmin = -Inf, xmax = Inf,
ymin = 500, ymax = Inf,
alpha = 1,
fill = "#ac5079")+ #>pior classe
annotate("rect",
xmin = -Inf, xmax = Inf,
ymin = 0, ymax = 500,
alpha = 1,
fill = "#8dcdeb")+ #classe 1
stat_summary(
fun.data = f,
geom = 'errorbar',
width = 0.3,
position = position_dodge(width = 0.65),
)+
stat_summary(
fun.data = f,
geom = "boxplot",
width = 0.7,
fill = '#F8F8FF',
color = "black",
outlier.shape = NA, #se deixar NA fica só o jitter, se não, deixa 1
)+
labs(title = titulo,
x= NULL,
y="")+
scale_y_continuous(expand = expansion(mult = c(0.01, 0.05)),
n.breaks = 8,
limits = c(min(plan_wide_19902020$solidos_totais, na.rm = TRUE),
max(plan_wide_19902020$solidos_totais, na.rm = TRUE)),
labels = scales::number_format(accuracy = 1,
decimal.mark = ",",
big.mark = " "),
trans = "log10")+
ggbeeswarm::geom_quasirandom(
size = 1.2,
alpha = .25,
width = .07,
)+
scale_x_discrete(limits = c("87398500",
"87398980",
"87398900",
"87398950",
"87405500",
"87406900",
"87409900"),
labels = c("PM1", "PM2", "PM3", "PM4", "PM5", "PM6", "PM7")
)+
geom_smooth(method = "lm",
se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
aes(group=1),
alpha=.5,
na.rm = TRUE,
size = 1)+
theme_grafs()
}
# Chunk 29: gerando function ts_soltot
ts_solidos_totais <- function(dados = plan_wide_19902020, eixo_x = data_coleta, eixo_y = solidos_totais, titulo = "Sólidos totais"){
dados %>%
dplyr::filter(
periodo == "1990-2000" |
periodo == "2000-2010" |
periodo == "2010-2020"
) %>%
dplyr::select(ponto_monitoramento, solidos_totais, data_coleta, periodo) %>%
ggplot2::ggplot(
data = .,
aes(
x = {{eixo_x}},
y = {{eixo_y}}
)
)+
annotate("rect",
xmin = periodo_inicial, xmax = periodo_final,
ymin = 500, ymax = Inf,
alpha = 1,
fill = "#ac5079")+ #>pior classe
annotate("rect",
xmin = periodo_inicial, xmax = periodo_final,
ymin = 0, ymax = 500,
alpha = 1,
fill = "#8dcdeb")+ #classe 1
labs(
title = titulo,
x = NULL,
y = NULL,
)+
geom_vline(
xintercept = as.Date(c("2010-01-01", "2000-01-01"), "%Y-%m-%d"),
color = "grey25",
linetype = "dashed",
)+
geom_line(
linewidth = 0.05,
linetype = 9,
# aes(color = codigo),
na.rm = TRUE
)+
geom_point(
size = 1,
# aes(color = codigo),
na.rm = TRUE
)+
scale_x_date(
limits = as.Date(c(
"1990-01-01",
"2021-01-01"
# NA #pode usar NA também
)),
expand = c(0.0, 0.0),
date_breaks = "5 years",
minor_breaks = "1 year",
date_labels = "%Y",
)+
facet_wrap(
~ponto_monitoramento,
nrow = 4,
)+
theme_bw()+
theme(
plot.title =
element_text(
hjust = 0.5,
color = "black",
size = 17),
axis.title.x =
element_text(
color = "black",
size = 15,
angle = 0,),
# element_blank(),
axis.title.y = element_text(
color = "black",
size = 15,
angle = 90),
axis.text.x = element_text(
color = "black",
size = 13,
angle = 0),
axis.text.y = element_text(
color = "black",
size = 15,
angle = 0),
strip.background = element_rect(fill = "white",
linetype = 1,
size = 0.5,
color = "black"),
strip.text = element_text(size = 14),
# panel.background = element_rect(fill = "white"),
panel.spacing.x = unit(1, "lines"),
plot.margin = margin(l = 5, r = 10,
b = 5, t = 5)
)
}
# Chunk 30: gerando function graf condutividade-eletrica
boxplot_cond_elet <- function(dados = plan_wide_19902020, eixo_x = codigo, eixo_y = condutividade, titulo = "Condutividade elétrica"){
ggplot2::ggplot(
data = dados,
aes(
x = {{eixo_x}},
y = {{eixo_y}}
)
)+
annotate("rect",
xmin = -Inf, xmax = Inf,
ymin = 500, ymax = Inf,
alpha = 1,
fill="#eb5661")+ #classe 4
annotate("rect",
xmin = -Inf, xmax = Inf,
ymin = 0, ymax = 500,
alpha = 1,
fill="#8dcdeb")+ #classe 1
stat_summary(
fun.data = f,
geom = 'errorbar',
width = 0.3,
position = position_dodge(width = 0.65),
)+
stat_summary(
fun.data = f,
geom = "boxplot",
width = 0.7,
fill = '#F8F8FF',
color = "black",
outlier.shape = NA, #se deixar NA fica só o jitter, se não, deixa 1
)+
labs(title = titulo,
x="Estação",
y="µmhos/cm")+
scale_y_continuous(expand = expansion(mult = c(0.01, 0.05)),
n.breaks = 8,
limits = c(
# min(plan_wide_19902020$condutividade, na.rm = TRUE),
5,
1000
# max(plan_wide_19902020$condutividade, na.rm = TRUE)
),
labels = scales::number_format(accuracy = 1,
decimal.mark = ",",
big.mark = " "),
trans = "log10")+
ggbeeswarm::geom_quasirandom(
size = 1.2,
alpha = .25,
width = .07,
)+
scale_x_discrete(limits = c("87398500",
"87398980",
"87398900",
"87398950",
"87405500",
"87406900",
"87409900"),
labels = c("PM1", "PM2", "PM3", "PM4", "PM5", "PM6", "PM7")
)+
geom_smooth(method = "lm",
se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
aes(group=1),
alpha=.5,
na.rm = TRUE,
size = 1)+
theme_grafs()
}
# Chunk 31: gerando function ts_condutividade
ts_condutividade <- function(dados = plan_wide_19902020, eixo_x = data_coleta, eixo_y = condutividade, titulo = "Condutividade elétrica"){
dados %>%
dplyr::filter(
periodo == "1990-2000" |
periodo == "2000-2010" |
periodo == "2010-2020"
) %>%
dplyr::select(ponto_monitoramento, condutividade, data_coleta, periodo) %>%
ggplot2::ggplot(
data = .,
aes(
x = {{eixo_x}},
y = {{eixo_y}}
)
)+
annotate("rect",
xmin = periodo_inicial, xmax = periodo_final,
ymin = 500, ymax = Inf,
alpha = 1,
fill="#eb5661")+ #classe 4
annotate("rect",
xmin = periodo_inicial, xmax = periodo_final,
ymin = 0, ymax = 500,
alpha = 1,
fill="#8dcdeb")+ #classe 1
labs(title = titulo,
x=NULL,
y="µmhos/cm")+
geom_vline(
xintercept = as.Date(c("2010-01-01", "2000-01-01"), "%Y-%m-%d"),
color = "grey25",
linetype = "dashed",
)+
geom_line(
linewidth = 0.05,
linetype = 9,
# aes(color = codigo),
na.rm = TRUE
)+
geom_point(
size = 1,
# aes(color = codigo),
na.rm = TRUE
)+
scale_x_date(
limits = as.Date(c(
"1990-01-01",
"2021-01-01"
# NA #pode usar NA também
)),
expand = c(0.0, 0.0),
date_breaks = "5 years",
minor_breaks = "1 year",
date_labels = "%Y",
)+
facet_wrap(
~ponto_monitoramento,
nrow = 4,
)+
theme_bw()+
theme(
plot.title =
element_text(
hjust = 0.5,
color = "black",
size = 17),
axis.title.x =
element_text(
color = "black",
size = 15,
angle = 0,),
# element_blank(),
axis.title.y = element_text(
color = "black",
size = 15,
angle = 90),
axis.text.x = element_text(
color = "black",
size = 13,
angle = 0),
axis.text.y = element_text(
color = "black",
size = 15,
angle = 0),
strip.background = element_rect(fill = "white",
linetype = 1,
size = 0.5,
color = "black"),
strip.text = element_text(size = 14),
# panel.background = element_rect(fill = "white"),
panel.spacing.x = unit(1, "lines"),
plot.margin = margin(l = 5, r = 10,
b = 5, t = 5)
)
}
(od <- plan_wide_19902020 %>%
boxplot_od(
titulo = "Oxigênio Dissolvido no período 1990-2020",
)+
facet_wrap(~periodo)
)
ETEs_join <- st_join(
ETEs_2013,
ETEs_2019,
)
ETEs_BH <-
terra::crop(
ETEs_join,
BH_gravatai,
mask = TRUE
)
pacman::p_load(
ggspatial,
geobr,
terra
)
pacman::p_load(
ggspatial,
geobr,
terra
)
pacman::p_load(
ggspatial,
geobr,
terra
)
ETEs_join <- st_join(
ETEs_2013,
ETEs_2019,
)
ETEs_BH <-
terra::crop(
ETEs_join,
BH_gravatai,
mask = TRUE
)
ETEs_BH <- ETEs_join %>%
tmaptools::crop_shape(ETEs_join,
BH_gravatai$geometry,
polygon = TRUE
) %>%
# st_as_sf() %>%
# st_transform(crs = 31982) %>%
dplyr::select(
1:13,
geom
)
ETEs_BH
plot(ETEs_BH)
pacman::p_load(xfun)
R_LIBS_SITE="E:\\Documents\\R\\R-4.2.2\\library"
pacman::p_load(xfun)
xfun::file_string("header.html")
````{=html}
