max(IQA,
na.rm = TRUE),
n =
length(IQA))
)
plan_wide_19902020 %>%
select(CODIGO, IQA) %>%
group_by(CODIGO) %>%
summarize(
min =
min(IQA,
na.rm = TRUE),
q1 =
quantile(IQA, 0.25,
na.rm = TRUE),
median =
median(IQA,
na.rm = TRUE),
mean =
mean(IQA,
na.rm= TRUE),
q3 =
quantile(IQA, 0.75,
na.rm = TRUE),
max =
max(IQA,
na.rm = TRUE))
# Chunk 65: Testando coisas
# ggplot(mtcars, aes(x=hp, y=wt)) +
#   geom_point() +
#   geom_smooth()
#
# iris %>%
#   qplot(Sepal.Length, Sepal.Width,
#         colour = Species, fill=Species, data=.) +
#   geom_smooth(method=lm)
#
#
# df111 <- data.frame(x = c(1:100))
# glimpse(df111)
# df111$y <- 2 + 3 * df111$x + rnorm(100, sd = 40)
# p111 <- ggplot(data = df111, aes(x = x, y = y)) +
#             geom_smooth(method = "lm", se=FALSE, color="black", formula = y ~ x) +
#             geom_point()
# p111
#
# lm_eqn <- function(df111){
#     m <- lm(y ~ x, df111);
#     eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
#          list(a = format(unname(coef(m)[1]), digits = 2),
#               b = format(unname(coef(m)[2]), digits = 2),
#              r2 = format(summary(m)$r.squared, digits = 3)))
#     as.character(as.expression(eq));
# }
#
# p2 <- p111 +
#   geom_text(x = 25, y = 300,
#             label = lm_eqn(df111),
#             parse = TRUE)
# install.packages("ggpmisc")
# library(ggpmisc)
# summary(lm(plan_wide_19902020$CODIGO~plan_wide_19902020$DBO))
#
#
# p <- ggplot(data, aes(y=number, x=pod)) +
#   geom_boxplot()
# print(p)
# install.packages("GGally")
fit = lm(plan_wide_19902020$`Oxigênio dissolvido`~ plan_wide_19902020$CODIGO)
summary(fit)
summary.lm(fit)
plan_wide_19902020$IQA
plan_wide_19902020 <- plan_wide_19902020 %>%
mutate(IQA = ifelse(IQA == 0, NA, IQA))
# Chunk 66: Correlação
library(GGally)
parametros_IQA <- plan_wide_19902020 %>%
select(CODIGO,
`Escherichia coli`,
pH,
DBO,
`Nitrogênio amoniacal`,
`Nitrogênio total`,
`Fósforo total`,
`Temperatura água`,
Turbidez,
`Sólidos totais`,
`Oxigênio dissolvido`,
Condutividade)
parametros_IQA %>%
select(-`Nitrogênio amoniacal`, -CODIGO) %>%
ggcorr(method = "complete.obs",
label = TRUE,
label_alpha = TRUE)
# Chunk 67: Gráfico CondElet periodo1
(Cond_elet_p1 <- ggplot(plan_wide_19902020 %>%
filter(ANO_COLETA>"1990" &
ANO_COLETA<="2000"),
aes(CODIGO,
Condutividade))+
annotate("rect",
xmin=-Inf,
xmax=Inf,
ymin=500,
ymax=Inf,
alpha=1,
fill="#eb5661")+ #classe 4
annotate("rect",
xmin=-Inf,
xmax=Inf,
ymin=-Inf,
ymax=500,
alpha=1,
fill="#8dcdeb")+ #classe 1
stat_boxplot(geom = 'errorbar',
width=0.3,
position = position_dodge(width = 0.65))+
geom_boxplot(fill='#F8F8FF',
color="black",
outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
width= 0.7)+
labs(title = "Condutividade elétrica no período 1990-2000",
x="Estação",
y="")+
# geom_jitter(width = .05,
#             alpha=.2,
#             size=1.5,
#             color="black")+
scale_y_continuous(expand = expansion(mult = c(0.01, 0.05)),
n.breaks = 8,
limits = c(0,
max(plan_wide_19902020$Condutividade, na.rm = TRUE)),
labels = scales::number_format(accuracy = 1,
decimal.mark = ",",
big.mark = " "))+
scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
geom_smooth(method = "lm",
se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
aes(group=1),
alpha=.5,
na.rm = TRUE,
size = 1)+
# geom_line(aes(color="red"),
#           alpha=.0)+
# scale_color_manual("Legenda",
#                    guide="legend",
#                    values = c("Pior Classe"="#ac5079",
#                               "Classe 3"="#fcf7ab",
#                               "Classe 1"="#8dcdeb"))+
# guides(color=guide_legend(override.aes = list(linetype=c(1,1,1),
#                                               lwd=c(2,2,2),
#                                               shape=c(NA,NA,NA),
#                                               alpha=1)))+
theme_classic())
# Chunk 68: Salvando os gráficos
# ggsave("od_p1.png",
#        plot = od_p1,
#        width = 13,
#        height = 10,
#        dpi = 300)
# Chunk 1: Rotina pra toda vez que abrir o documento
# Abrir o GitHub Desktop
# Abrir o RStudio
# Verificar se estão
# Chunk 2: instalar pacotes
# install.packages(tidyverse)
# Chunk 3: Acessar os pacotes
library(readr)
library(rmarkdown)
library(qboxplot)
library(readxl)
library(pillar)
library(dplyr)
library(tidyverse)
library(gapminder)
library(knitr)
library(kableExtra)
library(ggpubr)
library(gridExtra)
library(modelsummary)
library(gtsummary)
# Chunk 4: Importando a planilha
plan_wide_19902020 <- read_delim("C:/Users/Léo/Desktop/TCC/TCC_github/TCC_gh/plan_wide_19902020.tsv",
delim = "\t", escape_double = FALSE,
col_types = cols(Alcalinidade = col_double(),
CODIGO = col_character(), COORD_GEO_LAT_GRAU = col_double(),
COORD_GEO_LONG_GRAU = col_double(),
DATA_COLETA = col_date(format = "%d/%m/%Y"),
Nitrato = col_double(), Nitrito = col_double(),
SDT = col_double(), SST = col_double(),
`Vazão` = col_double(), `Vazão rio` = col_double()),
locale = locale(date_names = "pt", decimal_mark = ",",
grouping_mark = ""), trim_ws = TRUE)
# Chunk 5: Importando a planilha2
#
# plan_wide_19902020 <- read_delim("C:/Users/maria/OneDrive/Área de Trabalho/Amor/TCC_gh/plan_wide_19902020.tsv",
#     delim = "\t", escape_double = FALSE,
#     col_types = cols(Alcalinidade = col_double(),
#         CODIGO = col_character(), COORD_GEO_LAT_GRAU = col_double(),
#         COORD_GEO_LONG_GRAU = col_double(),
#         DATA_COLETA = col_date(format = "%d/%m/%Y"),
#         Nitrato = col_double(), Nitrito = col_double(),
#         SDT = col_double(), SST = col_double(),
#         `Vazao` = col_double(), `Vazao rio` = col_double()),
#     locale = locale(date_names = "pt", decimal_mark = ",",
#         grouping_mark = ""), trim_ws = TRUE)
# Chunk 6: Mostrando os dados
# library(rmarkdown)
# kable(head(plan_wide_19902020),format = "html") %>%
#   kable_styling(full_width = FALSE,
#                 bootstrap_options = c("striped", "hover", "condensed", "responsive"))
# Chunk 7: Visualização da planilha importada
paged_table(plan_wide_19902020,
options = list(rows.print = 15,
cols.print = 10))
# Chunk 8: Códigos Git
# cd myrepo
# ls
# head README.md
# git status
# git add README.md
# git commit -m "A commit from my local computer"
#
# cd .. # voltar pro diretório acima
# rm -rf myrepo/ #remover/apagar a pasta myrepo
# Chunk 9: Aprendendo Git
# slides da bia que ajudam mt
# https://beatrizmilz.github.io/slidesR/git_rstudio/11-2021-ENCE.html#20
# aprendendo a sincronizar usando esse guia ->
# https://happygitwithr-com.translate.goog/push-pull-github.html?_x_tr_sl=auto&_x_tr_tl=pt&_x_tr_hl=pt-BR
# library(usethis)
# usethis::create_github_token() criar um código pra acesso e sincronização between R e github
# gitcreds::gitcreds_set()
#
# use_git_config(user.name = "leonardofwink",
#                user.email = "leonardofwink@gmail.com")
# usethis::gh_token_help()
# Como mostrar os dados de um arquivo via Git/GitHub
# git clone https://github.com/leonardofwink/myrepo.git
# cd myrepo #acessa a pasta myrepo
# ls #lista os arquivos da pasta
# head README.md #mostra as primeiras observações do arquivo
# Como mostrar os dados de um arquivo via R
# head(C:/Users/Léo/myrepo/README.md)
# Adicionar uma linha ao README.md e verificar se o Git percebe a mudança
# echo "A line I wrote on my local computer" >> README.md
# git status
## C:\Users\Léo\myrepo>git status
## On branch main
## Your branch is up to date with 'origin/main'.
##
## Changes not staged for commit:
##   (use "git add <file>..." to update what will be committed)
##   (use "git restore <file>..." to discard changes in working directory)
##         **modified:   README.md**
##
## no changes added to commit (use "git add" and/or "git commit -a")
# Chunk 10: Gráfico OD periodo 1
(od_p1 <-ggplot(plan_wide_19902020 %>%
filter(ANO_COLETA>"1990" &
ANO_COLETA<="2000"),
aes(CODIGO,
`Oxigênio dissolvido`))+
annotate("rect",
xmin=-Inf,
xmax=Inf,
ymin=-Inf,
ymax=2,
alpha=1,
fill="#ac5079")+ #>pior classe
annotate("rect",
xmin=-Inf,
xmax=Inf,
ymin=2,
ymax=4,
alpha=1,
fill="#eb5661")+ #classe 4
annotate("rect",
xmin=-Inf,
xmax=Inf,
ymin=4,
ymax=5,
alpha=1,
fill="#fcf7ab")+ #classe 3
annotate("rect",
xmin=-Inf,
xmax=Inf,
ymin=5,
ymax=6,
alpha=1,
fill="#70c18c")+ #classe 2
annotate("rect",
xmin=-Inf,
xmax=Inf,
ymin=6,
ymax=Inf,
alpha=1,
fill="#8dcdeb")+ #classe 1
stat_boxplot(geom = 'errorbar',
width=0.3,
position = position_dodge(width = 0.65))+
geom_boxplot(fill='#F8F8FF',
color="black",
outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
width= 0.7)+
labs(title = "Oxigênio Dissolvido no período 1990-2000",
x="Estação",
y="mg/L")+
# geom_jitter(width = .05,
#             alpha=.2,
#             size=1.5,
#             color="black")+
scale_y_continuous(expand = expansion(mult = c(0,0)),
n.breaks = 11,
limits = c(-1,21))+
scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
geom_smooth(method = "lm",
se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
aes(group=1),
alpha=.5,
na.rm = TRUE,
size = 1)+
#  geom_line(
#     aes(color="red"),
#     alpha=.0,
# )+
# scale_color_manual("Legenda",
#                    guide="legend",
#                    values = c("Classe 1"="#8dcdeb",
#                               "Classe 2"="#70c18c",
#                               "Classe 3"="#fcf7ab",
#                               "Classe 4"="#eb5661",
#                               "Pior Classe"="#ac5079"))+
# guides(color=guide_legend(override.aes = list(linetype=c(1,1,1,1,1),
#                                               lwd=c(2,2,2,2,2),
#                                               shape=c(NA,NA,NA,NA,NA),
#                                               alpha=1)))+
theme(legend.position = "bottom")+
theme_classic())
# Chunk 11: Gráfico OD periodo 2
(od_p2 <-ggplot(plan_wide_19902020 %>%
filter(ANO_COLETA>"2000" &
ANO_COLETA<="2010"),
aes(CODIGO,
`Oxigênio dissolvido`))+
annotate("rect",
xmin=-Inf,
xmax=Inf,
ymin=-Inf,
ymax=2,
alpha=1,
fill="#ac5079")+ #>pior classe
annotate("rect",
xmin=-Inf,
xmax=Inf,
ymin=2,
ymax=4,
alpha=1,
fill="#eb5661")+ #classe 4
annotate("rect",
xmin=-Inf,
xmax=Inf,
ymin=4,
ymax=5,
alpha=1,
fill="#fcf7ab")+ #classe 3
annotate("rect",
xmin=-Inf,
xmax=Inf,
ymin=5,
ymax=6,
alpha=1,
fill="#70c18c")+ #classe 2
annotate("rect",
xmin=-Inf,
xmax=Inf,
ymin=6,
ymax=Inf,
alpha=1,
fill="#8dcdeb")+ #classe 1
stat_boxplot(geom = 'errorbar',
width=0.3,
position = position_dodge(width = 0.65))+
geom_boxplot(fill='#F8F8FF',
color="black",
outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
width= 0.7)+
labs(title = "Oxigênio Dissolvido no período 2000-2010",
x="Estação",
y="")+
# geom_jitter(width = .05,
#             alpha=.2,
#             size=1.5,
#             color="black")+
scale_y_continuous(expand = expansion(mult = c(0,0)),
n.breaks = 11,
limits = c(-1,21))+
scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
geom_smooth(method = "lm",
se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
aes(group=1),
alpha=.5,
na.rm = TRUE,
size = 1)+
# geom_line(aes(color="red"),
#           alpha=.0)+
# scale_color_manual("Legenda",
#                    guide="legend",
#                    values = c("Classe 1"="#8dcdeb",
#                               "Classe 2"="#70c18c",
#                               "Classe 3"="#fcf7ab",
#                               "Classe 4"="#eb5661",
#                               "Pior Classe"="#ac5079"))+
# guides(color=guide_legend(override.aes = list(linetype=c(1,1,1,1,1),
#                                               lwd=c(2,2,2,2,2),
#                                               shape=c(NA,NA,NA,NA,NA),
#                                               alpha=1)))+
theme(legend.position = "bottom")+
theme_classic())
# Chunk 12: Gráfico OD periodo 3
(od_p3 <-ggplot(plan_wide_19902020 %>%
filter(ANO_COLETA>"2010" &
ANO_COLETA<="2020"),
aes(CODIGO,
`Oxigênio dissolvido`))+
annotate("rect",
xmin=-Inf,
xmax=Inf,
ymin=-Inf,
ymax=2,
alpha=1,
fill="#ac5079")+ #>pior classe
annotate("rect",
xmin=-Inf,
xmax=Inf,
ymin=2,
ymax=4,
alpha=1,
fill="#eb5661")+ #classe 4
annotate("rect",
xmin=-Inf,
xmax=Inf,
ymin=4,
ymax=5,
alpha=1,
fill="#fcf7ab")+ #classe 3
annotate("rect",
xmin=-Inf,
xmax=Inf,
ymin=5,
ymax=6,
alpha=1,
fill="#70c18c")+ #classe 2
annotate("rect",
xmin=-Inf,
xmax=Inf,
ymin=6,
ymax=Inf,
alpha=1,
fill="#8dcdeb")+ #classe 1
stat_boxplot(geom = 'errorbar',
width=0.3,
position = position_dodge(width = 0.65))+
geom_boxplot(fill='#F8F8FF',
color="black",
outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
width= 0.7)+
labs(title = "Oxigênio Dissolvido no período 2010-2020",
x="Estação",
y="")+
# geom_jitter(width = .05,
#             alpha=.2,
#             size=1.5,
#             color="black")+
scale_y_continuous(expand = expansion(mult = c(0,0)),
n.breaks = 11,
limits = c(-1,21))+
scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
geom_smooth(method = "lm",
se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
aes(group=1),
alpha=.5,
na.rm = TRUE,
size = 1)+
# geom_line(aes(color="red"),
#           alpha=.0)+
# scale_color_manual("Legenda",
#                    guide="legend",
#                    values = c("Classe 1"="#8dcdeb",
#                               "Classe 2"="#70c18c",
#                               "Classe 3"="#fcf7ab",
#                               "Classe 4"="#eb5661",
#                               "Pior Classe"="#ac5079"))+
# guides(color=guide_legend(override.aes = list(linetype=c(1,1,1,1,1),
#                                               lwd=c(2,2,2,2,2),
#                                               shape=c(NA,NA,NA,NA,NA),
#                                               alpha=1)))+
theme(legend.position = "bottom")+
theme_classic())
# Chunk 13: Gráfico OD 3 periodos juntos
grid.arrange(od_p1, od_p2, od_p3, ncol = 3)
# summary(plan_wide_19902020 %>%
#           select(CODIGO,
#                  `Oxigênio dissolvido`),
#         filter(ANO_COLETA>"2010" &
#                  ANO_COLETA<="2020"))
# Chunk 14: Salvando OD
ggsave("od_p1.png",
plot = od_p1,
path = "./graficos",
dpi = 300,
type = "cairo")
