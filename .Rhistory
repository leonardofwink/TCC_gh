#            y="mg/L")+
#       # geom_jitter(width = .05,
#       #             alpha=.2,
#       #             size=1.5,
#       #             color="black")+
#       scale_y_continuous(expand = expansion(mult = c(0,0)),
#                          n.breaks = 11,
#                          limits = c(-1,21))+
#       scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
#       geom_smooth(method = "lm",
#                   se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
#                   aes(group=1),
#                   alpha=.5,
#                   na.rm = TRUE,
#                   size = 1)+
#       # annotate(geom_text(aes(x = "87405500", y = 15),
#       #                    label = lm_eqc(plan_wide_19902020),
#       #                    parse = TRUE,
#       #                    inherit.aes = TRUE,
#       #                    check_overlap = TRUE))+
#       #  geom_line(
#       #     aes(color="red"),
#       #     alpha=.0,
#       # )+
#       # scale_color_manual("Legenda",
#       #                    guide="legend",
#       #                    values = c("Classe 1"="#8dcdeb",
#       #                               "Classe 2"="#70c18c",
#       #                               "Classe 3"="#fcf7ab",
#       #                               "Classe 4"="#eb5661",
#       #                               "Pior Classe"="#ac5079"))+
#    # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1,1,1),
#    #                                               lwd=c(2,2,2,2,2),
#    #                                               shape=c(NA,NA,NA,NA,NA),
#    #                                               alpha=1)))+
#       theme(legend.position = "bottom")+
#       theme_classic())
# list1111 <- sessionInfo()
# list1111$loadedOnly
# install.packages("ggpmisc")
# library(ggpmisc)
# summary(lm(plan_wide_19902020$CODIGO~plan_wide_19902020$DBO))
#
#
# p <- ggplot(data, aes(y=number, x=pod)) +
#   geom_boxplot()
# print(p)
# install.packages("GGally")
# fit = lm(plan_wide_19902020$oxigenio_dissolvido~ plan_wide_19902020$CODIGO)
# summary(fit)
# summary.lm(fit)
#
# pacman::p_load(esquisse)
# sumario <- function(x, y){
#   x %>%
#     group_by(CODIGO) %>%
#     summarise(
#       list(min= ~min(y, na.rm = TRUE),
#            Q1= ~quantile(y, probs = 0.25),
#            median= ~median(y, na.rm = TRUE),
#            Q3= ~quantile(y, probs = 0.75),
#            max= ~max(y, na.rm = TRUE)),
#       .groups = "drop"
#       )
# }
# Chunk 91: Correlação
parametros_IQA %>%
select(
-CODIGO,
-nitro_total) %>%
# group_by(CODIGO) %>%
rename(
CE = Condutividade,
OD = oxigenio_dissolvido,
ST = solidos_totais,
Turb = turbidez,
Temp = temp_agua,
Ptot = fosforo_total,
NAmon = nitro_amon,
NTK = nitro_kjeldahl
) %>%
ggcorr(
method = "complete.obs",
# "pearson",
# "pairwise",
name = "Correlação",
label = TRUE,
label_alpha = TRUE,
digits = 3,
low = "#3B9AB2",
mid = "#EEEEEE",
high = "#F21A00",
# palette = "RdYlBu",
layout.exp = 0,
legend.position = "left",
label_round = 3,
# legend.size = 18,
geom = "tile",
nbreaks = 10,
)+
labs(title = "Correlação entre parâmetros físico-químicos na\nBacia Hidrográfica do rio Gravataí no período 1990-2020")+
theme_linedraw()+
theme(
legend.position = c(0.15, 0.6),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14),
# legend.spacing = unit(element_text(),
# units = 5)
plot.title = element_text(hjust = 0.5,
size = 16)
)
# Gráfico das correlações entre todos os parâmetros com significância
correl_IQA <- parametros_IQA %>%
select(-CODIGO) %>%
ggpairs(title = "Correlação entre parâmetros que compõem o IQA",
axisLabels = "show")
correlacao_pIQA <- parametros_IQA %>%
group_by(CODIGO) %>%
correlation::correlation()
correlacao_pIQA %>%
# glimpse()
filter(
p < 0.001
) %>%
t() %>%
summary()
parametros_IQA %>%
# group_by(CODIGO) %>%
select(
nitro_kjeldahl, Condutividade
) %>%
# correlation::cor_test() %>%
plot()
str(
plot(
correlation::cor_test(
parametros_IQA,
"nitro_kjeldahl",
"Condutividade"
)
)
)
# Chunk 92: Gráfico cond_elet facetted
(cond_elet <- ggplot(plan_wide_19902020,
aes(CODIGO,
Condutividade))+
annotate("rect",
xmin=-Inf,
xmax=Inf,
ymin=500,
ymax=Inf,
alpha=1,
fill="#eb5661")+ #classe 4
annotate("rect",
xmin=-Inf,
xmax=Inf,
ymin=-Inf,
ymax=500,
alpha=1,
fill="#8dcdeb")+ #classe 1
stat_boxplot(geom = 'errorbar',
width=0.3,
position = position_dodge(width = 0.65))+
geom_boxplot(fill='#F8F8FF',
color="black",
outlier.shape = NA, #se deixar NA fica só o jitter, se não, deixa 1
width= 0.7)+
facet_wrap(~periodo)+
labs(title = "Condutividade elétrica no período 1990-2020",
x="Estação",
y="µmhos/cm")+
scale_y_continuous(expand = expansion(mult = c(0.01, 0.05)),
n.breaks = 8,
limits = c(0,
max(plan_wide_19902020$Condutividade, na.rm = TRUE)),
labels = scales::number_format(accuracy = 1,
decimal.mark = ",",
big.mark = " "))+
ggbeeswarm::geom_quasirandom(
size = 1.2,
alpha = .25,
width = .07,
)+
scale_x_discrete(limits = c("87398500",
"87398980",
"87398900",
"87398950",
"87405500",
"87406900",
"87409900"),
labels = c("PM1", "PM2", "PM3", "PM4", "PM5", "PM6", "PM7")
)+
geom_smooth(method = "lm",
se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
aes(group=1),
alpha=.5,
na.rm = TRUE,
size = 1)+
theme_grafs()
)
# Chunk 93: Gráfico cond_elet periodo1
(cond_elet_p1 <- ggplot(plan_wide_19902020 %>%
filter(ANO_COLETA>"2000" &
ANO_COLETA<="2010"),
aes(CODIGO,
Condutividade))+
annotate("rect",
xmin=-Inf,
xmax=Inf,
ymin=500,
ymax=Inf,
alpha=1,
fill="#eb5661")+ #classe 4
annotate("rect",
xmin=-Inf,
xmax=Inf,
ymin=-Inf,
ymax=500,
alpha=1,
fill="#8dcdeb")+ #classe 1
stat_boxplot(geom = 'errorbar',
width=0.3,
position = position_dodge(width = 0.65))+
geom_boxplot(fill='#F8F8FF',
color="black",
outlier.shape = NA, #se deixar NA fica só o jitter, se não, deixa 1
width= 0.7)+
labs(title = "Condutividade elétrica no período 1990-2000",
x="Estação",
y="µmhos/cm")+
scale_y_continuous(expand = expansion(mult = c(0.01, 0.05)),
n.breaks = 8,
limits = c(0,
max(plan_wide_19902020$Condutividade, na.rm = TRUE)),
labels = scales::number_format(accuracy = 1,
decimal.mark = ",",
big.mark = " "))+
ggbeeswarm::geom_quasirandom(
size = 1.2,
alpha = .25,
width = .07,
)+
scale_x_discrete(limits = c("87398500",
"87398980",
"87398900",
"87398950",
"87405500",
"87406900",
"87409900"),
labels = c("PM1", "PM2", "PM3", "PM4", "PM5", "PM6", "PM7")
)+
geom_smooth(method = "lm",
se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
aes(group=1),
alpha=.5,
na.rm = TRUE,
size = 1)+
theme_grafs()
)
# Chunk 94: Gráfico cond_elet periodo2
(cond_elet_p2 <- ggplot(plan_wide_19902020 %>%
filter(ANO_COLETA>"2000" &
ANO_COLETA<="2010"),
aes(CODIGO,
Condutividade))+
annotate("rect",
xmin=-Inf,
xmax=Inf,
ymin=500,
ymax=Inf,
alpha=1,
fill="#eb5661")+ #classe 4
annotate("rect",
xmin=-Inf,
xmax=Inf,
ymin=-Inf,
ymax=500,
alpha=1,
fill="#8dcdeb")+ #classe 1
stat_boxplot(geom = 'errorbar',
width=0.3,
position = position_dodge(width = 0.65))+
geom_boxplot(fill='#F8F8FF',
color="black",
outlier.shape = NA, #se deixar NA fica só o jitter, se não, deixa 1
width= 0.7)+
labs(title = "Condutividade elétrica no período 2000-2010",
x="Estação",
y="µmhos/cm")+
scale_y_continuous(expand = expansion(mult = c(0.01, 0.05)),
n.breaks = 8,
limits = c(0,
max(plan_wide_19902020$Condutividade, na.rm = TRUE)),
labels = scales::number_format(accuracy = 1,
decimal.mark = ",",
big.mark = " "))+
ggbeeswarm::geom_quasirandom(
size = 1.2,
alpha = .25,
width = .07,
)+
scale_x_discrete(limits = c("87398500",
"87398980",
"87398900",
"87398950",
"87405500",
"87406900",
"87409900"),
labels = c("PM1", "PM2", "PM3", "PM4", "PM5", "PM6", "PM7")
)+
geom_smooth(method = "lm",
se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
aes(group=1),
alpha=.5,
na.rm = TRUE,
size = 1)+
theme_grafs()
)
# Chunk 95: Gráfico cond_elet periodo3
(cond_elet_p3 <- ggplot(plan_wide_19902020 %>%
filter(ANO_COLETA>"2010" &
ANO_COLETA<="2020"),
aes(CODIGO,
Condutividade))+
annotate("rect",
xmin=-Inf,
xmax=Inf,
ymin=500,
ymax=Inf,
alpha=1,
fill="#eb5661")+ #classe 4
annotate("rect",
xmin=-Inf,
xmax=Inf,
ymin=-Inf,
ymax=500,
alpha=1,
fill="#8dcdeb")+ #classe 1
stat_boxplot(geom = 'errorbar',
width=0.3,
position = position_dodge(width = 0.65))+
geom_boxplot(fill='#F8F8FF',
color="black",
outlier.shape = NA, #se deixar NA fica só o jitter, se não, deixa 1
width= 0.7)+
labs(title = "Condutividade elétrica no período 2010-2020",
x="Estação",
y="µmhos/cm")+
scale_y_continuous(expand = expansion(mult = c(0.01, 0.05)),
n.breaks = 8,
limits = c(0,
max(plan_wide_19902020$Condutividade, na.rm = TRUE)),
labels = scales::number_format(accuracy = 1,
decimal.mark = ",",
big.mark = " "))+
ggbeeswarm::geom_quasirandom(
size = 1.2,
alpha = .25,
width = .07,
)+
scale_x_discrete(limits = c("87398500",
"87398980",
"87398900",
"87398950",
"87405500",
"87406900",
"87409900"),
labels = c("PM1", "PM2", "PM3", "PM4", "PM5", "PM6", "PM7")
)+
geom_smooth(method = "lm",
se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
aes(group=1),
alpha=.5,
na.rm = TRUE,
size = 1)+
theme_grafs()
)
# Chunk 96: Gráfico cond_elet 3 periodos juntos
grid.arrange(cond_elet_p1, cond_elet_p2, cond_elet_p3, ncol = 3)
# Chunk 97: Sumário cond_elet
(sum_cond_elet_p1 <- plan_wide_19902020 %>%
select(CODIGO, Condutividade, ANO_COLETA) %>%
filter(ANO_COLETA>"1990" &
ANO_COLETA<="2000") %>%
group_by(CODIGO) %>%
summarize(
min =
min(Condutividade,
na.rm = TRUE),
q1 =
quantile(Condutividade, 0.25,
na.rm = TRUE),
median =
median(Condutividade,
na.rm = TRUE),
mean =
mean(Condutividade,
na.rm= TRUE),
q3 =
quantile(Condutividade, 0.75,
na.rm = TRUE),
max =
max(Condutividade,
na.rm = TRUE))
)
(sum_cond_elet_p2 <- plan_wide_19902020 %>%
select(CODIGO, Condutividade, ANO_COLETA) %>%
filter(ANO_COLETA>"2000" &
ANO_COLETA<="2010") %>%
group_by(CODIGO) %>%
summarize(
min =
min(Condutividade,
na.rm = TRUE),
q1 =
quantile(Condutividade, 0.25,
na.rm = TRUE),
median =
median(Condutividade,
na.rm = TRUE),
mean =
mean(Condutividade,
na.rm= TRUE),
q3 =
quantile(Condutividade, 0.75,
na.rm = TRUE),
max =
max(Condutividade,
na.rm = TRUE))
)
(sum_cond_elet_p3 <- plan_wide_19902020 %>%
select(CODIGO, Condutividade, ANO_COLETA) %>%
filter(ANO_COLETA>"2010" &
ANO_COLETA<="2020") %>%
group_by(CODIGO) %>%
summarize(
min =
min(Condutividade,
na.rm = TRUE),
q1 =
quantile(Condutividade, 0.25,
na.rm = TRUE),
median =
median(Condutividade,
na.rm = TRUE),
mean =
mean(Condutividade,
na.rm= TRUE),
q3 =
quantile(Condutividade, 0.75,
na.rm = TRUE),
max =
max(Condutividade,
na.rm = TRUE),
n =
length(Condutividade))
)
# plan_wide_19902020 %>%
#    select(CODIGO, IQA) %>%
#    group_by(CODIGO) %>%
#    summarize(
#       min =
#          min(IQA,
#              na.rm = TRUE),
#       q1 =
#          quantile(IQA, 0.25,
#                   na.rm = TRUE),
#       median =
#          median(IQA,
#                 na.rm = TRUE),
#       mean =
#          mean(IQA,
#               na.rm= TRUE),
#       q3 =
#          quantile(IQA, 0.75,
#                   na.rm = TRUE),
#       max =
#          max(IQA,
#              na.rm = TRUE))
# Chunk 98: Salvando cond_elet
ggsave("cond_elet.png",
units = c("px"),
width = 4500,
height = 2993,
plot = cond_elet,
path = "./graficos",
dpi = 300,
type = "cairo")
ggsave("cond_elet_p1.png",
plot = cond_elet_p1,
path = "./graficos",
dpi = 300,
type = "cairo")
ggsave("cond_elet_p2.png",
plot = cond_elet_p2,
path = "./graficos",
dpi = 300,
type = "cairo")
ggsave("cond_elet_p3.png",
plot = cond_elet_p3,
path = "./graficos",
dpi = 300,
type = "cairo")
ggsave("cond_elet_3periodos.png",
units = c("px"),
width = 4500,
height = 2993,
plot = grid.arrange(cond_elet_p1, cond_elet_p2, cond_elet_p3, ncol = 3),
path = "./graficos",
dpi = 300,
type = "cairo")
View(dbo_p3)
