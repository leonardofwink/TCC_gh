ggsave("cond_elet_p2.png",
plot = cond_elet_p2,
path = "./graficos",
dpi = 300,
type = "cairo")
ggsave("cond_elet_p3.png",
plot = cond_elet_p3,
path = "./graficos",
dpi = 300,
type = "cairo")
ggsave("cond_elet_3periodos.png",
units = c("px"),
width = 4500,
height = 2993,
plot = grid.arrange(cond_elet_p1, cond_elet_p2, cond_elet_p3, ncol = 3),
path = "./graficos",
dpi = 300,
type = "cairo")
# Chunk 104: elementos do boxplot
set.seed(2023)
exemplo_boxplot_df <- data.frame(
PM = c("PM1"),
# letras = letters[seq( from = 1, to = 1 )],
Stat1 = rnorm(100,
mean = 5,
sd = 1.8)
)
(sumario_exemplo_bp <- exemplo_boxplot_df %>%
group_by(PM) %>%
summarize(
max = max(Stat1),
p95 = quantile(Stat1, 0.95),
p80 = quantile(Stat1, 0.8),
median = median(Stat1),
p20 = quantile(Stat1, 0.2),
p05 = quantile(Stat1, 0.05),
min = min(Stat1),
) %>%
t() %>%
row_to_names(row_number = 1) %>%
as.numeric()
)
(boxplot_example <- exemplo_boxplot_df %>%
ggplot(
aes(
x = PM,
y = Stat1,
)
)+
stat_summary(
fun.data = f,
geom = 'errorbar',
width = 0.15,
position = position_dodge(width = 0.65),
)+
stat_summary(
fun.data = f,
geom = "boxplot",
width = 0.40,
fill = '#F8F8FF',
color = "black",
outlier.shape = NA, #se deixar NA fica só o jitter, se não, deixa 1
)+
labs(
title = "Elementos do *boxplot*",
x= NULL,
y= NULL
)+
ggbeeswarm::geom_quasirandom(
size = 1.4,
alpha = .3,
width = .07,
)+
scale_y_continuous(
expand = expansion(mult = c(0,0)),
n.breaks = 8,
limits = c(-0.3,12)
)+
annotate(
geom = "text",
x = 1.55,
hjust = "right",
y = sumario_exemplo_bp,
label = c("Valor máximo", "P95", "P80", "Mediana", "P20", "P05", "Valor mínimo"),
# fontface = 3
)+
geom_richtext(
x = 0.56,
y = 9.103998,
label.color = NA,
hjust = "center",
label = "<i>Outliers</i>"
)+
geom_curve(
aes(
x = 0.6, xend = 0.98,
y = 9.103998 , yend = 9.103998 , #Outliers
),
curvature = 0,
size = 1.0,
arrow = arrow(length = unit(0.05, "npc")),
lineend = "round"
)+
#definindo o [
geom_curve(
aes(
x = 0.74, xend = 0.78,
y = 6.683828, yend = 6.683828,
),
curvature = 0,
size = 1.0,
lineend = "butt"
)+
geom_curve(
aes(
x = 0.74, xend = 0.74,
y = 3.545771, yend = 6.683828,
),
curvature = 0,
size = 1.0,
lineend = "butt"
)+
annotate(
geom = "text",
x = 0.56,
hjust = "center",
y = 5.11,
label = "Amplitude\n(P80-P20)"
)+
geom_curve(
aes(
x = 0.74, xend = 0.78,
y = 3.545771 , yend = 3.545771 ,
),
curvature = 0,
size = 1.0,
lineend = "butt"
)+
# fim do [
geom_curve(
aes(
x = 0.6, xend = 0.90,
y = 7.866927 , yend = 7.866927 , #whisker superior
),
curvature = 0,
size = 1.0,
arrow = arrow(length = unit(0.05, "npc")),
lineend = "round"
)+
annotate(
geom = "text",
x = 0.56,
hjust = "center",
y = 7.866927,
label = "Whisker\nsuperior"
)+
geom_curve(
aes(
x = 0.6, xend = 0.90,
y = 2.277104  , yend = 2.277104  , #whisker inferior
),
curvature = 0,
size = 1.0,
arrow = arrow(length = unit(0.05, "npc")),
lineend = "round"
)+
annotate(
geom = "text",
x = 0.56,
hjust = "center",
y = 2.277104,
label = "Whisker\ninferior"
)+
geom_curve(
aes(
x = 1.4, xend = 1.01,
y = 9.92343, yend = 9.92343, #valor máximo
),
curvature = 0,
size = 1.0,
arrow = arrow(length = unit(0.05, "npc")),
lineend = "round"
)+
geom_curve(
aes(
x = 1.45, xend = 1.11,
y = 7.866927 , yend = 7.866927 , #P95
),
curvature = 0,
size = 1.0,
arrow = arrow(length = unit(0.05, "npc")),
lineend = "round"
)+
geom_curve(
aes(
x = 1.45, xend = 1.22,
y = 6.683828  , yend = 6.683828  , #P80
),
curvature = 0,
size = 1.0,
arrow = arrow(length = unit(0.05, "npc")),
lineend = "round"
)+
geom_curve(
aes(
x = 1.45, xend = 1.22,
y = 4.886935   , yend = 4.886935   , #P50
),
curvature = 0,
size = 1.0,
arrow = arrow(length = unit(0.05, "npc")),
lineend = "round"
)+
geom_curve(
aes(
x = 1.45, xend = 1.22,
y = 3.545771, yend = 3.545771, #P20
),
curvature = 0,
size = 1.0,
arrow = arrow(length = unit(0.05, "npc")),
lineend = "round"
)+
geom_curve(
aes(
x = 1.45, xend = 1.11,
y = 2.277104, yend = 2.277104, #P05
),
curvature = 0,
size = 1.0,
arrow = arrow(length = unit(0.05, "npc")),
lineend = "round"
)+
geom_curve(
aes(
x = 1.4, xend = 1.01,
y = 1.282177, yend = 1.282177, #valor mínimo
),
curvature = 0,
size = 1.0,
arrow = arrow(length = unit(0.05, "npc")),
lineend = "round"
)+
# theme_grafs()+
theme_bw()+
theme(
plot.title =
element_markdown(
hjust = 0.5,
color = "black",
size = 19),
)
)
# Chunk 105: salvando graf elementos boxplot
ggsave(
filename = "exemplo_boxplot.png",
plot = boxplot_example,
units = c("px"),
width = (4500)/1.5,
height = (2993)/1.5,
path = "./graficos",
dpi = 300,
# type = "cairo"
)
# Chunk 106: criando exemplo tipos boxplot tukey x garrett
set.seed(2021)
data <- tibble(
grupo = factor(
c(rep(
"Grupo 1", 100),
rep("Grupo 2", 250),
rep("Grupo 3", 25)
)
),
valor = c(seq(0, 20, length.out = 100),
c(rep(0, 5),
rnorm(30, 2, .1),
rnorm(90, 5.4, .1),
rnorm(90, 14.6, .1),
rnorm(30, 18, .1),
rep(20, 5)
),
rep(seq(0, 20, length.out = 5), 5))
) %>%
rowwise() %>%
mutate(
valor = if_else(
grupo == "Grupo 2", valor + rnorm(1, 0, .4),
valor
)
)
## function to return median and labels
n_fun <- function(x){
return(
data.frame(
y = median(x) - 1.25,
label = paste0(
"n = ",length(x)
)
)
)
}
# Chunk 107: tukey boxplot
(tukey_n_boxplot <- ggplot(data,
aes(x = grupo,
y = valor)
)+
stat_boxplot(geom = 'errorbar',
width = 0.15,
position = position_dodge(width = 0.65))+
geom_boxplot(fill = "grey92",
width = 0.40,
position = position_dodge(width = 0.65))+
## use summary function to add text labels
stat_summary(
geom = "text",
fun.data = n_fun,
# family = "Oswald",
size = 5
)+
labs(
title = "Tukey *boxplot*",
x= NULL,
# y="mg/L"
)+
# theme_grafs()+
theme_bw()+
theme(
axis.text.y = element_text(
angle = 90,
# size=15,
# face=2
),
plot.title =
element_markdown(
hjust = 0.5,
color = "black",
size = 19)
)
)
(tukey_boxplot <- ggplot(data, aes(x = grupo,
y = valor)) +
stat_boxplot(geom = 'errorbar',
width = 0.15,
position = position_dodge(width = 0.65))+
geom_boxplot(fill = "grey92",
width = 0.40,
position = position_dodge(width = 0.65)) +
## use either geom_point() or geom_jitter()
geom_point(
## draw bigger points
size = 2,
## add some transparency
alpha = .25,
## add some jittering
position = position_jitter(
## control randomness and range of jitter
seed = 1, width = .2
)
)+
theme_bw()+
labs(
title = "Tukey *boxplot*",
x= NULL,
# y="mg/L"
)+
# theme_grafs()+
theme_bw()+
theme(
axis.text.y = element_text(
angle = 90,
# size=15,
# face=2
),
plot.title =
element_markdown(
hjust = 0.5,
color = "black",
size = 19)
))
# Chunk 108: garrett boxplot
data %>%
group_by(grupo) %>%
summarize(
min = min(valor),
P20 = quantile(valor, 0.20),
q1 = quantile(valor, 0.25),
mediana = median(valor),
q3 = quantile(valor, 0.75),
P80 = quantile(valor, 0.80),
max = max(valor)
) %>%
t() %>%
row_to_names(row_number = 1)
(box_percentile_plot <- ggplot(data,
aes(x = grupo, y = valor)
) +
stat_summary(
fun.data = f,
geom = 'errorbar',
width = 0.15,
position = position_dodge(width = 0.65),
)+
stat_summary(
fun.data = f,
geom = "boxplot",
width = 0.40,
fill = 'grey92',
color = "black",
outlier.shape = NA, #se deixar NA fica só o jitter, se não, deixa 1
)+
# geom_boxplot(fill = "grey92") +
## use either geom_point() or geom_jitter()
geom_point(
## draw bigger points
size = 2,
## add some transparency
alpha = .25,
## add some jittering
position = position_jitter(
## control randomness and range of jitter
seed = 1, width = .2
)
)+
labs(
title = "*Box Percentile-Plot*",
x= NULL,
# y="mg/L"
)+
# theme_grafs()+
theme_bw()+
theme(
axis.text.y = element_text(
angle = 90,
# size = 15,
# face = 2
),
plot.title =
element_markdown(
hjust = 0.5,
color = "black",
size = 19)
)
)
grid.arrange(
tukey_boxplot, box_percentile_plot,
ncol = 2
)
fig_tukey_garrett <- plot_grid(tukey_boxplot, box_percentile_plot,
labels = "AUTO")
# Chunk 109: salvando graf exemplo boxplot
ggsave(
filename = "tukey_n_boxplot.png",
plot = tukey_n_boxplot,
units = c("px"),
width = 4500,
height = 2993,
path = "./graficos",
dpi = 300,
# type = "cairo"
)
ggsave(
filename = "tukey_boxplot.png",
plot = tukey_boxplot,
units = c("px"),
width = 4500,
height = 2993,
path = "./graficos",
dpi = 300,
# type = "cairo"
)
ggsave(
filename = "box_percentile_plot.png",
plot = box_percentile_plot,
units = c("px"),
width = 4500,
height = 2993,
path = "./graficos",
dpi = 300,
# type = "cairo"
)
ggsave(
filename = "fig_tukey_garrett.png",
plot = fig_tukey_garrett,
units = c("px"),
width = 4500,
height = 2993,
path = "./graficos",
dpi = 300,
# type = "cairo"
)
grid.arrange(od_p1, od_p2, od_p3, ncol = 3)
grid.arrange(dbo_p1, dbo_p2, dbo_p3, ncol = 3)
boxplot_ecoli()
boxplot_ecoli()+
facet_wrap(~periodo)
boxplot_ecoli(
titulo = "*Escherichia coli* no período 1990-2020"
)+
facet_wrap(~periodo)
(ecoli <- boxplot_ecoli(
titulo = "*Escherichia coli* no período 1990-2020"
)+
facet_wrap(~periodo)
)
boxplot_ecoli()
(ecoli <- boxplot_ecoli(
titulo = "*Escherichia coli* no período 1990-2020"
)+
facet_wrap(~periodo)
)
R_LIBS_SITE="E:\\Documents\\R\\R-4.2.2\\library"
