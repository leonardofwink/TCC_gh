plot.title = element_text(
size = 16,
hjust = 0.5,
color = "black",
face = "bold"
),
legend.position = "right",
legend.direction = "vertical",
legend.key.size = unit(0.5, "cm"),
)
(mapa_localizacao_est_BHG <- municipios_RS %>%
ggplot()+
geom_sf(
data = corpos_hidricos,
color = "#5cacee",
fill = "#5cacee",
)+
#  geom_sf(
#   data = municipios_RS %>% filter(code_muni == 4300002),
#   color = "#5cacee",
#   fill = "#5cacee",
# )+
geom_sf(
data = municipios_RS,
fill = "transparent"
)+
geom_sf_text(
data = municipios_RS,
aes(label = str_to_upper(name_muni)),
size = 2,
# expand = TRUE,
# clip = "off",
check_overlap = TRUE,
)+
geom_sf(
data = BH_gravatai,
color = "red",
linewidth = 1.02,
fill = "transparent",
)+
geom_sf(
data = rio_grav_lin,
color = "#5cacee",
)+
geom_sf(
data = afluentes,
color = "#5cacee",
)+
geom_sf(
data = rio_grav_pol,
fill = "#5cacee",
color = "#5cacee",
)+
# geom_sf(
#   data = ETEs_BH,
#   aes(
#     # shape = ete_nm_mun,
#     # color = ete_nm.x
#   ),
#   size = 3,
# )+
geom_spatial_point(
data = est_monit_BHG,
aes(
x = longitude,
y = latitude,
),
shape = 21,
size = 2.4,
stroke = 1.2,
color = "black",
fill = "white",
crs = 31982,
show.legend = TRUE,
)+
geom_label_repel(
data =  est_monit_BHG,
aes(
x = longitude,
y = latitude,
label = ponto_monitoramento,
),
box.padding = 0.86,
label.padding = 0.2,
min.segment.length = 0,
force = 1,
direction = "y"
)+
labs(
title = "Localização dos pontos de monitoramento\nde qualidade da água na Bacia Hidrográfica do rio Gravataí",
# caption = "Elaborado por: Leonardo Fernandes Wink, 2023",
x = NULL,
y = NULL,
)+
annotation_scale(
location = "br",
width_hint = 0.2
)+
annotation_north_arrow(
location = "br",
which_north = "true",
pad_x = unit(0.00, "cm"),
pad_y = unit(0.55, "cm"),
style = north_arrow_fancy_orienteering
)+
# scale_y_continuous(
#   expand = expansion(mult = c(0,0)),
#   # n.breaks = 8,
#   limits = c(6655378, 6712248),
#   breaks = c(6655378, 6683813, 6712248),
#   labels = c("6655378", "6683813", "6712248"),
# )+
coord_sf(
# xlim = c(469663, 563512),
xlim = c(446179.8, 591687.6),
ylim = c(6655378, 6712248),
expand = FALSE,
datum = st_crs(BH_gravatai)
)+
theme_bw()+
theme(
axis.title.x =
element_text(
color = "black",
size = 10,
angle = 0,),
# element_blank(),
axis.title.y = element_text(
color = "black",
size = 10,
angle = 90),
axis.text.x = element_text(
color = "black",
size = 8),
axis.text.y = element_text(
hjust = 0.5,
color = "black",
size = 8,
angle = 90),
plot.background = element_rect(
fill = "white",
color = "black",
linewidth = 1,
),
panel.background = element_rect(fill = "white"),
# plot.margin = margin(t = 0.25, r = 0.25, b = 0.25, l = 0.25, "cm"),
plot.margin = margin(l = 5, r = 10,
b = 2, t = 2, unit = "mm"),
plot.title = element_text(
size = 16,
hjust = 0.5,
color = "black",
face = "bold"
),
legend.position = "right",
legend.direction = "vertical",
legend.key.size = unit(0.5, "cm"),
)
)
mapa_localizacao_est_BHG
library(grid)
brasil <- read_country()
sul_br <- read_region()
estados_br <- read_state()
(inset_map_br <- ggplot()+
geom_sf(data = brasil)+
geom_sf(data = estados_br, fill = grey(0.92))+
geom_sf(
data = estados_br %>% filter(abbrev_state == "RS"),
fill = "yellow",
alpha = 0.5
)+
# geom_spatial_label_repel(
# geom_sf_text(
# data = estados_br,
# aes(label = abbrev_state),
# alpha = 1.0,
# crs = 31982,
# aes(
#   x = estados_br$geom,
#   y = estados_br$geom,
#   label = abbrev_state,
# ),
# box.padding = 0.86,
# )+
# st_bbox(BH_gravatai)
geom_rect(
aes(
xmin = -50.4, xmax = -51.3,
ymin = -29.7, ymax = -30.3,
),
color = "red",
linewidth = 1.5,
fill = "transparent"
)+
scale_y_continuous(
# expand = expansion(mult = c(0,0)),
# n.breaks = 8,
# limits = c(-35, 6),
breaks = c(-30, -20, -10, 0),
# labels = c("1", "2", "3", "4", "5", "6", "7", "8", "9")
)+
scale_x_continuous(
# expand = expansion(mult = c(0,0)),
# n.breaks = 8,
# limits = c(-35, 6),
breaks = c(-65, -50, -35),
# labels = c("1", "2", "3", "4", "5", "6", "7", "8", "9")
)+
coord_sf(
xlim = c(-77, -32),
ylim = c(-35, 6.2),
expand = FALSE,
)+
theme_minimal_grid()+
theme(
plot.margin = margin(
t = 0.06,
r = 0.06,
b = 0.06,
l = 0.06,
unit = "npc"
),
plot.background = element_rect(
fill = "white",
color = "black",
linewidth = 1,
),
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8),
)
)
(inset_map_rs <- ggplot()+
geom_sf(
data = estados_br %>% filter(abbrev_state == "SC" | abbrev_state == "PR"),
fill = "transparent",
alpha = 0.5
)+
# geom_sf(
#   data = estados_br %>% filter(abbrev_state == "RS"),
#   fill = "grey",
#   alpha = 0.5
# )+
geom_sf(
data = RHG %>% filter(nome != "Guaíba"),
fill = "grey90",
alpha = 0.5
)+
geom_sf(
data = RHG %>% filter(nome == "Guaíba"),
fill = "grey50",
alpha = 0.5
)+
# st_bbox(BH_gravatai)
geom_sf(
data = municipios_RS %>% filter(code_muni == 4300002),
# color = "#5cacee",
color = "grey30",
fill = "#5cacee",
)+
# geom_sf(
#   data = municipios_RS,
#   fill = "transparent",
# )+
geom_rect(
aes(
xmin = -50.4*0.995, xmax = -51.3*1.005,
ymin = -29.7*0.995, ymax = -30.3*1.005,
),
color = "red",
linewidth = 1.0,
fill = "transparent"
)+
geom_sf(
data = BH_gravatai,
alpha = 0.9,
color = "red",
fill = "yellow"
)+
labs(
x = NULL,
y = NULL,
)+
scale_y_continuous(
breaks = c(-34, -30, -26),
)+
scale_x_continuous(
breaks = c(-57, -54, -51, -48),
)+
coord_sf(
xlim = c(-58, -48),
ylim = c(-34, -26),
expand = FALSE,
)+
theme_minimal_grid()+
theme(
plot.margin = margin(
t = 0.07,
r = 0.07,
b = 0.07,
l = 0.07,
unit = "npc"
),
plot.background = element_rect(
fill = "white",
color = "black",
linewidth = 1,
),
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8),
)
)
plot(brasil)
plot(sul_br)
set.seed(2)
(mapa_localizacao_BHG <- ggdraw()+
draw_plot(
mapa_localizacao_est_BHG,
# hjust = 0,
x = 0,
y = 0.10,
# scale = TRUE,
halign = 0,
valign = 1,
width = 1,
height = 1
)+
draw_plot(
inset_map_br,
x = -0.025,
y = 0,
scale = TRUE,
hjust = 0,
vjust = 0,
halign = 0,
valign = 0,
height = 0.25,
width = 0.25
)+
draw_plot(
inset_map_rs,
# x = 0.19, #pode ser um pouco menos
x = 0.18,
# x = 0.175, #tem q ser mais
y = 0,
scale = TRUE,
hjust = 0,
vjust = 0,
halign = 0,
valign = 0,
height = 0.25,
width = 0.25
)+
draw_plot(
elementos_do_mapa,
# x = 0.4,
x = 0.41,
y = 0,
scale = TRUE,
hjust = 0,
vjust = 0,
halign = 0,
valign = 0,
# valign = 0,
height = 0.25,
width = 0.59
)+
theme(
plot.margin = margin(
t = 0.01,
r = 0.01,
b = 0.01,
l = 0.01,
unit = "npc"
),
plot.background = element_rect(
fill = "white",
color = "black",
linewidth = 1,
),
)
)
plot(BH_gravatai)
plot(BH_gravatai)
plot(balanco_qualiquant)
balanco_hidrico_BHG <- tmaptools::crop_shape(
balanco_qualiquant$geom,
BH_gravatai$geometry,
polygon = TRUE
) %>%
st_as_sf() %>%
st_transform(crs = 31982) %>% #4326 = WGS84, 4674 = SIRGAS2000, 31982 = SIRGAS2000/UTM 22S
st_join(
balanco_qualiquant,
)
str(balanco_qualiquant)
st_crs(balanco_qualiquant) == st_crs(BH_gravatai)
st_crs(balanco_qualiquant) == st_crs(balanco_hidrico_BHG)
balanco_hidrico_BHG %>%
# rename(
#   "Relação entre carga orgânica lançada e a assimilável" = BLN_CS_QUA
# )
ggplot(
aes(fill = BLN_CS_QUA)
)+
geom_sf()+
labs(
title = "Balanço hídrico na Bacia Hidrográfica do rio Gravataí",
x = "Longitude",
y = "Latitude",
)+
theme_bw()+
theme(
plot.title = element_text(
size = 16,
hjust = 0.5,
color = "black",
face = "bold"
),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.size = unit(0.5, "cm"),
)
balanco_hidrico_BHG
mapa_interativo <- plan_wide_19902020 %>%
leaflet() %>%
setView(
lat = -30,
lng = -50.9,
zoom = 10
) %>%
addSimpleGraticule(
interval = 5,
showOriginLabel = FALSE,
) %>%
addProviderTiles(
# "Esri.WorldImagery" #Imagem de satélite
"OpenStreetMap.Mapnik" #OpenStreetMap -> Software livre
) %>%
# addPolygons(
#   data = lim_mun_RJ,
#   color = "red",
#   fill = FALSE,
#   weight = 2.5,
#   opacity = 1,
# ) %>%
addScaleBar(
# map,
position = "bottomright",
options = scaleBarOptions(
maxWidth = 150,
metric = TRUE,
imperial = FALSE,
updateWhenIdle = TRUE
)
)
mapa_interativo %>%
addCircleMarkers(
data = plan_wide_19902020,
lng = ~longitude,
lat = ~latitude,
radius = 4,
fillOpacity = 0.6,
color = "blue",
popup = ~paste0(
"<b>Ponto de monitoramento: </b>", {ponto_monitoramento}, "<br>",
"<b>Código: </b>", codigo, "<br>",
"<b>Endereço: </b>", {endereco}, "<br>",
"<b>Município: </b>", municipio, "<br>",
"<b>Recurso hídrico: </b>", recurso_hidrico, "<br>",
"<b>Altitude: </b>", altitude, "<br>",
"<b>Última coleta: </b>", tail(data_coleta, 1), "<br>",
sep = " "
)
)
mapa_interativo %>%
addCircleMarkers(
data = plan_wide_19902020,
lng = ~longitude,
lat = ~latitude,
radius = 4,
fillOpacity = 0.6,
color = "blue",
popup = ~paste0(
"<b>Ponto de monitoramento: </b>", {ponto_monitoramento}, "<br>",
"<b>Código: </b>", codigo, "<br>",
"<b>Endereço: </b>", {endereco}, "<br>",
"<b>Município: </b>", municipio, "<br>",
"<b>Recurso hídrico: </b>", recurso_hidrico, "<br>",
"<b>Altitude: </b>", altitude,"m" "<br>",
mapa_interativo %>%
addCircleMarkers(
data = plan_wide_19902020,
lng = ~longitude,
lat = ~latitude,
radius = 4,
fillOpacity = 0.6,
color = "blue",
popup = ~paste0(
"<b>Ponto de monitoramento: </b>", {ponto_monitoramento}, "<br>",
"<b>Código: </b>", codigo, "<br>",
"<b>Endereço: </b>", {endereco}, "<br>",
"<b>Município: </b>", municipio, "<br>",
"<b>Recurso hídrico: </b>", recurso_hidrico, "<br>",
"<b>Altitude: </b>", altitude,"m", "<br>",
"<b>Última coleta: </b>", tail(data_coleta, 1), "<br>",
sep = " "
)
)
Dentre os parâmetros selecionados para a análise, todos, com exceção ao nitrogênio amoniacal, possuíram mais de 85% dos valores medidos, das 1.179 amostras totais. O nitrogênio amoniacal teve `r eda_all_time %>% filter(skim_variable == "nitrogenio_amoniacal") %>% .[4] %>% pluck(1) %>% percent()` de registros com `r eda_all_time %>% filter(skim_variable == "nitrogenio_amoniacal") %>% .[3] %>% pluck(1)` dados faltantes. A temperatura da água foi o parâmetro mais completo, com `r eda_all_time %>% filter(skim_variable == "temperatura_agua") %>% .[4] %>% pluck(1) %>% percent()` das medições e apenas `r eda_all_time %>% filter(skim_variable == "temperatura_agua") %>% .[3] %>% pluck(1)` dados faltantes.
eda_all_time %>% filter(skim_variable == "nitrogenio_amoniacal") %>% .[4] %>% pluck(1) %>% percent()
eda_all_time
